{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_jsxs","className","children","items","map","item","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner"],"mappings":"2JAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6IIGxFC,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAOG,cAACC,IAAO,IAEnB,IAAK,UACD,OAAOF,EAAiBC,cAACF,EAAS,IAAKE,cAACC,IAAO,IAEnD,IAAK,YACD,OAAOD,cAACF,EAAS,IAErB,IAAK,QACD,OAAOE,cAACE,IAAY,IAExB,QACI,MAAM,IAAIC,MAAM,8BAuEbC,EAnEI,WAEf,IAAAC,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDZ,EAAca,EAAA,GAAEC,EAAiBD,EAAA,GACxCE,EAA4BR,mBAAS,GAAES,EAAAP,YAAAM,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAsCZ,oBAAS,GAAMa,EAAAX,YAAAU,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA4CC,cAArCC,EAAYF,EAAZE,aAAc3B,EAAOyB,EAAPzB,QAAS4B,EAAUH,EAAVG,WAE9BC,qBAAU,WACNC,EAAUX,GAAQ,KACnB,IAEH,IAAMW,EAAY,SAACX,EAAQY,GACbf,GAAVe,GACAJ,EAAaR,GACRa,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAIzBK,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZtB,EAAc,GAADwB,OAAAlD,YAAKyB,GAAUzB,YAAK+C,KACjClB,GAAkB,GAClBI,EAAUD,EAAS,GACnBK,EAAeW,IAuBnB,OACIG,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACvBzC,EAAWC,GAAS,kBAtB9B,SAAsBZ,GAClB,IAAMqD,EAAQrD,EAAIsD,KAAI,SAACC,EAAMC,GACzB,OACIzC,cAAA,MAAIoC,UAAU,eAAcC,SACxBF,eAACO,IAAI,CAACC,GAAE,WAAAT,OAAaM,EAAKI,IAAKP,SAAA,CAC3BrC,cAAA,OAAK6C,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAOZ,UAAU,qBACrDpC,cAAA,OAAKoC,UAAU,oBAAmBC,SAAEG,EAAKQ,QACzChD,cAAA,OAAKoC,UAAU,qBAAoBC,SAAEG,EAAKS,YAJhBR,MAU1C,OACIzC,cAAA,MAAIoC,UAAU,eAAcC,SACvBC,IAOuBY,CAAYzC,KAAaV,GAErDC,cAAA,UACImD,SAAUpD,EACVqD,MAAO,CAAC,QAAYhC,EAAc,OAAS,SAC3CgB,UAAU,mCACViB,QAAS,kBAAM1B,EAAUX,IAAQqB,SACjCrC,cAAA,OAAKoC,UAAU,QAAOC,SAAC,oB,QCpExBiB,UAhBI,WACf,OACInB,eAAAoB,WAAA,CAAAlB,SAAA,CACIF,eAACqB,IAAM,CAAAnB,SAAA,CACHrC,cAAA,QACIyD,KAAK,cACLC,QAAQ,iCAEZ1D,cAAA,SAAAqC,SAAO,mBAEXrC,cAAC2D,IAAS,IACV3D,cAACI,EAAU","file":"static/js/8.d0eef314.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n            break;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n            break;\n        case 'confirmed':\n            return <Component/>;\n            break;\n        case 'error':\n            return <ErrorMessage/>\n            break;\n        default:\n            throw new Error('Unexpected process state')\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    return (\n        <div className=\"comics__list\">\n            { setContent(process, () => renderItems(comicsList), newItemLoading) }\n\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    );\n}\n\nexport default ComicsPage;"],"sourceRoot":""}